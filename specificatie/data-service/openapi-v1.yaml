openapi: 3.1.0
info:
  title: BRP API Personen
  description: |
    API voor het bevragen van personen uit de basisregistratie personen (BRP), inclusief de registratie niet-ingezeten (RNI). Met deze API kun je personen zoeken en actuele gegevens over personen, kinderen, partners en ouders raadplegen.

    Gegevens die er niet zijn of niet actueel zijn krijg je niet terug. Had een persoon bijvoorbeeld een verblijfstitel die nu niet meer geldig is, dan wordt die verblijfstitel niet opgenomen. In partners wordt alleen de actuele of de laatst ontbonden partner geleverd.
  version: 2.6.0
  contact:
    url: https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen
  license:
    name: European Union Public License, version 1.2 (EUPL-1.2)
    url: https://eupl.eu/1.2/nl/
servers:
  - description: |
      Proef omgeving
    url: https://proefomgeving-gba.haalcentraal.nl/haalcentraal/api/brp
tags:
  - name: Personen
paths:
  /personen:
    post:
      operationId: GetPersonen
      summary: Zoek personen
      description: |
        Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met optionele parameters.

        1.  Raadpleeg met burgerservicenummer
        2.  Zoek met geslachtsnaam en geboortedatum
        3.  Zoek met geslachtsnaam, voornamen en gemeente van inschrijving
        4.  Zoek met postcode en huisnummer
        5.  Zoek met straat, huisnummer en gemeente van inschrijving
        6.  Zoek met nummeraanduiding identificatie

        Default krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.

        Gebruik de fields parameter om alleen die gegevens op te vragen die je nodig hebt en waarvoor je geautoriseerd bent.
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/PersonenQuery'
      responses:
        '200':
          description: |
            Zoekactie geslaagd
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/PersonenQueryResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '406':
          $ref: '#/components/responses/406'
        '415':
          $ref: '#/components/responses/415'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        '503':
          $ref: '#/components/responses/503'
        default:
          $ref: '#/components/responses/500'
      tags:
        - Personen
components:
  schemas:
    PersonenQuery:
      type: object
      required:
        - type
        - fields
      discriminator:
        propertyName: type
        mapping:
          ZoekMetGeslachtsnaamEnGeboortedatum: '#/components/schemas/ZoekMetGeslachtsnaamEnGeboortedatum'
          ZoekMetNaamEnGemeenteVanInschrijving: '#/components/schemas/ZoekMetNaamEnGemeenteVanInschrijving'
          RaadpleegMetBurgerservicenummer: '#/components/schemas/RaadpleegMetBurgerservicenummer'
          ZoekMetPostcodeEnHuisnummer: '#/components/schemas/ZoekMetPostcodeEnHuisnummer'
          ZoekMetStraatHuisnummerEnGemeenteVanInschrijving: '#/components/schemas/ZoekMetStraatHuisnummerEnGemeenteVanInschrijving'
          ZoekMetNummeraanduidingIdentificatie: '#/components/schemas/ZoekMetNummeraanduidingIdentificatie'
          ZoekMetAdresseerbaarObjectIdentificatie: '#/components/schemas/ZoekMetAdresseerbaarObjectIdentificatie'
      properties:
        type:
          type: string
        fields:
          description: |
            Hiermee kun je de velden opgeven die je wenst te ontvangen.

            Velden die automatisch worden geleverd (inOnderzoek, geheimhoudingPersoonsgegevens, opschortingBijhouding, rni en verificatie) mag je niet opgeven in fields.
            Opgave van een pad dat verwijst naar een niet-bestaand veld of naar een automatisch geleverd veld leidt tot een 400 Bad Request.

            Meer details over hoe fields werkt lees je in het [feature overzicht](https://brp-api.github.io/Haal-Centraal-BRP-bevragen/v2/features-overzicht#filteren-van-de-velden-van-de-gevonden-personen).
            Stel je fields eenvoudig samen met de [fields tool](https://brp-api.github.io/Haal-Centraal-BRP-bevragen/v2/fields){:target="_blank" rel="noopener"}.
          type: array
          maxItems: 130
          minItems: 1
          items:
            $ref: '#/components/schemas/Field'
        gemeenteVanInschrijving:
          $ref: '#/components/schemas/GemeenteVanInschrijving'
    InclusiefOverledenPersonen:
      description: |
        Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.
      type: boolean
      example: true
    DatumFilter:
      type: string
      format: date
      example: '1964-09-24'
    GeslachtsnaamFilter:
      description: |
        De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan bij invoer van ten minste 3 letters.** **Zoeken met tekstvelden is case-insensitive.**
      type: string
      pattern: ^[a-zA-Z0-9À-ž \.\-\']{1,200}$|^[a-zA-Z0-9À-ž \.\-\']{3,199}\*{1}$
      example: Vries
    GeslachtFilter:
      description: |
        Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.
      type: string
      pattern: ^([Mm]|[Vv]|[Oo])$
      example: V
    VoorvoegselFilter:
      description: |
        Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. **Zoeken met tekstvelden is case-insensitive.**
      type: string
      pattern: ^[a-zA-Z \']{1,10}$
      example: de
    VoornamenOptioneelFilter:
      description: |
        De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. **Gebruik van de wildcard is toegestaan.** **Zoeken met tekstvelden is case-insensitive.**
      type: string
      pattern: ^[a-zA-Z0-9À-ž \.\-\']{1,199}\*{0,1}$
      example: Dirk
    ZoekMetGeslachtsnaamEnGeboortedatum:
      required:
        - geslachtsnaam
        - geboortedatum
      allOf:
        - $ref: '#/components/schemas/PersonenQuery'
        - type: object
          properties:
            inclusiefOverledenPersonen:
              $ref: '#/components/schemas/InclusiefOverledenPersonen'
            geboortedatum:
              description: |
                Je kunt alleen zoeken met een volledige geboortedatum.
              $ref: '#/components/schemas/DatumFilter'
            geslachtsnaam:
              $ref: '#/components/schemas/GeslachtsnaamFilter'
            geslacht:
              $ref: '#/components/schemas/GeslachtFilter'
            voorvoegsel:
              $ref: '#/components/schemas/VoorvoegselFilter'
            voornamen:
              $ref: '#/components/schemas/VoornamenOptioneelFilter'
    VoornamenVerplichtFilter:
      description: |
        De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. **Gebruik van de wildcard is toegestaan bij invoer van ten minste 3 letters.** **Zoeken met tekstvelden is case-insensitive.**
      type: string
      pattern: ^[a-zA-Z0-9À-ž \.\-\']{1,200}$|^[a-zA-Z0-9À-ž \.\-\']{3,199}\*{1}$
      example: Dirk
    ZoekMetNaamEnGemeenteVanInschrijving:
      required:
        - geslachtsnaam
        - gemeenteVanInschrijving
        - voornamen
      allOf:
        - $ref: '#/components/schemas/PersonenQuery'
        - type: object
          properties:
            inclusiefOverledenPersonen:
              $ref: '#/components/schemas/InclusiefOverledenPersonen'
            geslacht:
              $ref: '#/components/schemas/GeslachtFilter'
            geslachtsnaam:
              $ref: '#/components/schemas/GeslachtsnaamFilter'
            voorvoegsel:
              $ref: '#/components/schemas/VoorvoegselFilter'
            voornamen:
              $ref: '#/components/schemas/VoornamenVerplichtFilter'
    Burgerservicenummer:
      type: string
      pattern: ^[0-9]{9}$
      example: '555555021'
    RaadpleegMetBurgerservicenummer:
      required:
        - burgerservicenummer
      allOf:
        - $ref: '#/components/schemas/PersonenQuery'
        - type: object
          properties:
            burgerservicenummer:
              type: array
              items:
                $ref: '#/components/schemas/Burgerservicenummer'
              minItems: 1
              maxItems: 20
    Huisletter:
      description: |
        Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.
      type: string
      pattern: ^[a-zA-Z]{1}$
      example: a
    Huisnummer:
      description: |
        Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.
      type: integer
      minimum: 1
      maximum: 99999
      example: 14
    Huisnummertoevoeging:
      description: |
        Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.
      type: string
      pattern: ^[a-zA-Z0-9 \-]{1,4}$
      example: bis
    Postcode:
      description: |
        De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.
      type: string
      pattern: ^[1-9]{1}[0-9]{3}[ ]?[A-Za-z]{2}$
      example: 2341SX
    ZoekMetPostcodeEnHuisnummer:
      required:
        - postcode
        - huisnummer
      allOf:
        - $ref: '#/components/schemas/PersonenQuery'
        - type: object
          properties:
            inclusiefOverledenPersonen:
              $ref: '#/components/schemas/InclusiefOverledenPersonen'
            huisletter:
              $ref: '#/components/schemas/Huisletter'
            huisnummer:
              $ref: '#/components/schemas/Huisnummer'
            huisnummertoevoeging:
              $ref: '#/components/schemas/Huisnummertoevoeging'
            postcode:
              $ref: '#/components/schemas/Postcode'
            geboortedatum:
              description: |
                Je kunt alleen zoeken met een volledige geboortedatum.
              $ref: '#/components/schemas/DatumFilter'
            geslachtsnaam:
              $ref: '#/components/schemas/GeslachtsnaamFilter'
    StraatFilter:
      description: |
        Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan bij invoer van ten minste 7 letters.** **Zoeken met tekstvelden is case-insensitive.** 
      type: string
      pattern: ^[a-zA-Z0-9À-ž \-\'\.]{1,80}$|^[a-zA-Z0-9À-ž \-\'\.]{7,79}\*{1}$|^\*{1}[a-zA-Z0-9À-ž \-\'\.]{7,79}$
      example: Tulpstraat
    ZoekMetStraatHuisnummerEnGemeenteVanInschrijving:
      required:
        - straat
        - huisnummer
        - gemeenteVanInschrijving
      allOf:
        - $ref: '#/components/schemas/PersonenQuery'
        - type: object
          properties:
            inclusiefOverledenPersonen:
              $ref: '#/components/schemas/InclusiefOverledenPersonen'
            huisletter:
              $ref: '#/components/schemas/Huisletter'
            huisnummer:
              $ref: '#/components/schemas/Huisnummer'
            huisnummertoevoeging:
              $ref: '#/components/schemas/Huisnummertoevoeging'
            straat:
              $ref: '#/components/schemas/StraatFilter'
    NummeraanduidingIdentificatieFilter:
      type: string
      pattern: ^(?!0{16})[0-9]{16}$
      description: |
        De unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.
      example: '0518200000366054'
    ZoekMetNummeraanduidingIdentificatie:
      required:
        - nummeraanduidingIdentificatie
      allOf:
        - $ref: '#/components/schemas/PersonenQuery'
        - type: object
          properties:
            inclusiefOverledenPersonen:
              $ref: '#/components/schemas/InclusiefOverledenPersonen'
            nummeraanduidingIdentificatie:
              $ref: '#/components/schemas/NummeraanduidingIdentificatieFilter'
    AdresseerbaarObjectIdentificatieFilter:
      type: string
      pattern: ^(?!0{16})[0-9]{16}$
      description: |
        De identificatiecode van een adresseerbaar object uitgezonderd de standaardwaarde (0000000000000000)
      example: '0226010000038820'
    ZoekMetAdresseerbaarObjectIdentificatie:
      required:
        - adresseerbaarObjectIdentificatie
      allOf:
        - $ref: '#/components/schemas/PersonenQuery'
        - type: object
          properties:
            inclusiefOverledenPersonen:
              $ref: '#/components/schemas/InclusiefOverledenPersonen'
            adresseerbaarObjectIdentificatie:
              $ref: '#/components/schemas/AdresseerbaarObjectIdentificatieFilter'
    Field:
      description: |
        Het pad naar een gewenst veld in punt-gescheiden formaat. Bijvoorbeeld "burgerservicenummer", "geboorte.datum", "partners.naam.voornamen".
      type: string
      pattern: ^[a-zA-Z0-9\._]{1,200}$
    GemeenteVanInschrijving:
      description: |
        Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.
      type: string
      pattern: ^[0-9]{4}$
      example: '0518'
    Foutbericht:
      type: object
      description: Terugmelding bij een fout. JSON representatie in lijn met [RFC7807](https://tools.ietf.org/html/rfc7807).
      properties:
        type:
          description: Link naar meer informatie over deze fout
          type: string
          format: uri
        title:
          description: Beschrijving van de fout
          type: string
          pattern: ^[a-zA-Z0-9À-ž \.\-]{1,80}$
        status:
          type: integer
          minimum: 100
          maximum: 600
          description: Http status code
        detail:
          description: Details over de fout
          type: string
          pattern: ^[a-zA-Z0-9À-ž \.\-\(\),]{1,200}$
        instance:
          description: Uri van de aanroep die de fout heeft veroorzaakt
          type: string
          format: uri
        code:
          description: Systeemcode die het type fout aangeeft
          type: string
          pattern: ^[a-zA-Z0-9]{1,25}$
    PersonenQueryResponse:
      type: object
      required:
        - type
      discriminator:
        propertyName: type
        mapping:
          ZoekMetGeslachtsnaamEnGeboortedatum: '#/components/schemas/ZoekMetGeslachtsnaamEnGeboortedatumResponse'
          ZoekMetNaamEnGemeenteVanInschrijving: '#/components/schemas/ZoekMetNaamEnGemeenteVanInschrijvingResponse'
          RaadpleegMetBurgerservicenummer: '#/components/schemas/RaadpleegMetBurgerservicenummerResponse'
          ZoekMetPostcodeEnHuisnummer: '#/components/schemas/ZoekMetPostcodeEnHuisnummerResponse'
          ZoekMetStraatHuisnummerEnGemeenteVanInschrijving: '#/components/schemas/ZoekMetStraatHuisnummerEnGemeenteVanInschrijvingResponse'
          ZoekMetNummeraanduidingIdentificatie: '#/components/schemas/ZoekMetNummeraanduidingIdentificatieResponse'
          ZoekMetAdresseerbaarObjectIdentificatie: '#/components/schemas/ZoekMetAdresseerbaarObjectIdentificatieResponse'
      properties:
        type:
          type: string
    GbaDatum:
      type: string
      pattern: ^[0-9]{8}$
      example: '20180700'
    GeboorteBasis:
      type: object
      properties:
        datum:
          $ref: '#/components/schemas/GbaDatum'
          description: |
            Datum waarop de persoon is geboren.
    IndicatieGeheim:
      description: |
        Gegevens over het mogen verstrekken van persoonsgegevens aan derden / maatschappelijke instellingen.
      type: integer
      minimum: 0
      maximum: 7
    Waardetabel:
      type: object
      properties:
        code:
          type: string
          pattern: ^[a-zA-Z0-9 \.]+$
          example: '6030'
        omschrijving:
          type: string
          pattern: ^[a-zA-Z0-9À-ž \'\.\-\(\),]{1,200}$
          example: Nederland
    Geslachtsaanduiding:
      allOf:
        - $ref: '#/components/schemas/Waardetabel'
        - example:
            code: M
            omschrijving: man
    InOnderzoek:
      type: object
      required:
        - aanduidingGegevensInOnderzoek
        - datumIngangOnderzoek
      properties:
        aanduidingGegevensInOnderzoek:
          type: string
          pattern: ^[0-9]{6}$
          example: '100000'
        datumIngangOnderzoek:
          $ref: '#/components/schemas/GbaDatum'
    Voornamen:
      description: |
        De verzameling namen voor de geslachtsnaam, gescheiden door spaties.
      type: string
      pattern: ^[a-zA-Z0-9À-ž \.\-\']{1,200}$
      maxLength: 200
      example: Pieter Jan
    AdellijkeTitelPredicaatSoort:
      type: string
      enum:
        - titel
        - predicaat
    AdellijkeTitelPredicaatType:
      description: |
        Wordt gevuld met waarden uit de landelijke tabel 'Adellijke titel/predicaat'. De property soort geeft aan of het een 'predicaat' of een 'titel' is.
      allOf:
        - $ref: '#/components/schemas/Waardetabel'
        - properties:
            soort:
              $ref: '#/components/schemas/AdellijkeTitelPredicaatSoort'
          example:
            code: JV
            omschrijving: jonkvrouw
            soort: predicaat
    Voorvoegsel:
      type: string
      pattern: ^[a-zA-Z \']{1,10}$
      maxLength: 10
      example: de
    Geslachtsnaam:
      type: string
      pattern: ^[a-zA-Z0-9À-ž \.\-\']{1,200}$
      description: |
        De achternaam van een persoon.
      example: Vries
    NaamBasis:
      type: object
      properties:
        voornamen:
          $ref: '#/components/schemas/Voornamen'
        adellijkeTitelPredicaat:
          $ref: '#/components/schemas/AdellijkeTitelPredicaatType'
        voorvoegsel:
          $ref: '#/components/schemas/Voorvoegsel'
        geslachtsnaam:
          $ref: '#/components/schemas/Geslachtsnaam'
    OpschortingBijhoudingBasis:
      type: object
      description: |
        Gegevens over het (gedeeltelijk) stoppen van de bijhouding van de persoonsgegevens
      properties:
        reden:
          description: Omschrijving reden opschorting bijhouding
          $ref: '#/components/schemas/Waardetabel'
    GbaOpschortingBijhouding:
      allOf:
        - $ref: '#/components/schemas/OpschortingBijhoudingBasis'
        - type: object
          properties:
            datum:
              description: Datum waarop de bijhouding is gestaakt
              $ref: '#/components/schemas/GbaDatum'
    KorteStraatnaam:
      description: |
        De officiële naam van een openbare ruimte uit de Basisregistratie Gebouwen en Adressen (BAG), zo nodig verkort tot maximaal 24 tekens, of de straatnaam van een niet-BAG adres.
      type: string
      maxLength: 24
    Woonplaats:
      description: |
        Een woonplaats is een gedeelte van het grondgebied van de gemeente met een naam.
      title: woonplaats naam
      type: string
      pattern: ^[a-zA-Z0-9À-ž, \(\)\.\-\']{1,80}$
      example: Duiven
    Locatiebeschrijving:
      type: string
      maxLength: 35
      description: |
        Omschrijving van de ligging van een verblijfsobject, standplaats of ligplaats.
      example: Naast de derde brug
    Regel1:
      type: string
      maxLength: 40
      description: |
        Het eerste deel van een buitenlands adres. Vaak is dit een combinatie van de straat en huisnummer.
      example: 1600 Pennsylvania Avenue NW
    Regel2:
      type: string
      maxLength: 50
      description: |
        Het tweede deel van een buitenlands adres. Vaak is dit een combinatie van woonplaats eventueel in combinatie met de postcode.
      example: Washington, DC 20500
    Regel3:
      type: string
      maxLength: 35
      description: |
        Het derde deel van een buitenlands adres is optioneel. Het gaat om een of meer geografische gebieden van het adres in het buitenland.
      example: Selangor
    GbaVerblijfplaatsBeperkt:
      type: object
      properties:
        straat:
          $ref: '#/components/schemas/KorteStraatnaam'
        huisnummer:
          $ref: '#/components/schemas/Huisnummer'
        huisletter:
          $ref: '#/components/schemas/Huisletter'
        huisnummertoevoeging:
          $ref: '#/components/schemas/Huisnummertoevoeging'
        aanduidingBijHuisnummer:
          $ref: '#/components/schemas/Waardetabel'
        postcode:
          $ref: '#/components/schemas/Postcode'
        woonplaats:
          $ref: '#/components/schemas/Woonplaats'
        locatiebeschrijving:
          $ref: '#/components/schemas/Locatiebeschrijving'
        land:
          $ref: '#/components/schemas/Waardetabel'
        regel1:
          $ref: '#/components/schemas/Regel1'
        regel2:
          $ref: '#/components/schemas/Regel2'
        regel3:
          $ref: '#/components/schemas/Regel3'
        inOnderzoek:
          $ref: '#/components/schemas/InOnderzoek'
    OmschrijvingVerdrag:
      type: string
      description: |
        Omschrijving van het verdrag op basis waarvan een zusterorganisatie in het buitenland de gegevens bij de RNI-deelnemer heeft aangeleverd.
      pattern: ^[a-zA-Z0-9À-ž \.\-\']{1,50}$
    Categorie:
      type: string
      description: Naam van categorie waarop de RNI-deelnemer gegevens heeft aangeleverd
      pattern: ^[a-zA-Z0-9À-ž \.\-\'\/]{1,40}$
      example: Verblijfplaats
    RniDeelnemer:
      type: object
      description: Gegevens over de RNI-deelnemer die de gegevens in de betrokken categorie heeft aangeleverd.
      properties:
        deelnemer:
          $ref: '#/components/schemas/Waardetabel'
        omschrijvingVerdrag:
          $ref: '#/components/schemas/OmschrijvingVerdrag'
        categorie:
          $ref: '#/components/schemas/Categorie'
    VerificatieBasis:
      type: object
      properties:
        omschrijving:
          type: string
          description: |
            Omschrijving van de verificatie van de rni-gegevens
          pattern: ^[a-zA-Z0-9À-ž \.\-\']{1,50}$
    GbaVerificatie:
      allOf:
        - $ref: '#/components/schemas/VerificatieBasis'
        - type: object
          properties:
            datum:
              $ref: '#/components/schemas/GbaDatum'
    GbaPersoonBeperkt:
      type: object
      properties:
        burgerservicenummer:
          $ref: '#/components/schemas/Burgerservicenummer'
        geboorte:
          $ref: '#/components/schemas/GeboorteBasis'
        geheimhoudingPersoonsgegevens:
          $ref: '#/components/schemas/IndicatieGeheim'
        geslacht:
          $ref: '#/components/schemas/Geslachtsaanduiding'
        persoonInOnderzoek:
          $ref: '#/components/schemas/InOnderzoek'
        naam:
          $ref: '#/components/schemas/NaamBasis'
        opschortingBijhouding:
          $ref: '#/components/schemas/GbaOpschortingBijhouding'
        gemeenteVanInschrijving:
          $ref: '#/components/schemas/Waardetabel'
        verblijfplaats:
          $ref: '#/components/schemas/GbaVerblijfplaatsBeperkt'
        rni:
          type: array
          items:
            $ref: '#/components/schemas/RniDeelnemer'
        verificatie:
          $ref: '#/components/schemas/GbaVerificatie'
    ZoekMetGeslachtsnaamEnGeboortedatumResponse:
      allOf:
        - $ref: '#/components/schemas/PersonenQueryResponse'
        - type: object
          properties:
            personen:
              type: array
              items:
                $ref: '#/components/schemas/GbaPersoonBeperkt'
    ZoekMetNaamEnGemeenteVanInschrijvingResponse:
      allOf:
        - $ref: '#/components/schemas/PersonenQueryResponse'
        - type: object
          properties:
            personen:
              type: array
              items:
                $ref: '#/components/schemas/GbaPersoonBeperkt'
    ANummer:
      description: |
        Het A-nummer van de persoon
      type: string
      pattern: ^[0-9]{10}$
    UitsluitingKiesrechtBasis:
      type: object
      properties:
        uitgeslotenVanKiesrecht:
          type: boolean
          example: true
    GbaUitsluitingKiesrecht:
      allOf:
        - $ref: '#/components/schemas/UitsluitingKiesrechtBasis'
        - type: object
          properties:
            einddatum:
              $ref: '#/components/schemas/GbaDatum'
    EuropeesKiesrechtBasis:
      type: object
      properties:
        aanduiding:
          description: |
            Geeft aan of persoon een oproep moet ontvangen voor verkiezingen voor het Europees parlement. Wordt gevuld met waarden voor 'Europees_Kiesrecht' in 'tabelwaarden.csv'.
          $ref: '#/components/schemas/Waardetabel'
    GbaEuropeesKiesrecht:
      allOf:
        - $ref: '#/components/schemas/EuropeesKiesrechtBasis'
        - type: object
          properties:
            einddatumUitsluiting:
              $ref: '#/components/schemas/GbaDatum'
    GbaNaamPersoon:
      allOf:
        - $ref: '#/components/schemas/NaamBasis'
        - properties:
            aanduidingNaamgebruik:
              $ref: '#/components/schemas/Waardetabel'
    GbaNationaliteit:
      type: object
      properties:
        aanduidingBijzonderNederlanderschap:
          type: string
          pattern: ^(B|V)$
        datumIngangGeldigheid:
          $ref: '#/components/schemas/GbaDatum'
        nationaliteit:
          $ref: '#/components/schemas/Waardetabel'
        redenOpname:
          $ref: '#/components/schemas/Waardetabel'
        inOnderzoek:
          $ref: '#/components/schemas/InOnderzoek'
    GbaGeboorte:
      allOf:
        - $ref: '#/components/schemas/GeboorteBasis'
        - type: object
          properties:
            land:
              $ref: '#/components/schemas/Waardetabel'
            plaats:
              $ref: '#/components/schemas/Waardetabel'
    OverlijdenBasis:
      type: object
      properties:
        land:
          description: |
            land waar de persoon is overleden. Wordt gevuld met waarden uit de landelijke tabel 'Landen'.
          $ref: '#/components/schemas/Waardetabel'
        plaats:
          description: |
            gemeente waar de persoon is overleden. Wordt gevuld met waarden uit de landelijke tabel "Gemeenten".
          $ref: '#/components/schemas/Waardetabel'
    GbaOverlijden:
      allOf:
        - $ref: '#/components/schemas/OverlijdenBasis'
      type: object
      properties:
        datum:
          description: |
            datum waarop de persoon is overleden.
          $ref: '#/components/schemas/GbaDatum'
        inOnderzoek:
          $ref: '#/components/schemas/InOnderzoek'
    AdresseerbaarObjectIdentificatie:
      type: string
      pattern: ^[0-9]{16}$
      description: |
        De identificatiecode van een adresseerbaar object.
      example: '0226010000038820'
    NummeraanduidingIdentificatie:
      description: |
        Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.
      type: string
      pattern: ^[0-9]{16}$
      example: '0518200000366054'
    OfficieleStraatnaam:
      description: |
        De officiële naam van een openbare ruimte uit de Basisregistratie Gebouwen en Adressen (BAG).
      type: string
      maxLength: 80
    GbaVerblijfplaats:
      allOf:
        - $ref: '#/components/schemas/GbaVerblijfplaatsBeperkt'
        - type: object
          properties:
            adresseerbaarObjectIdentificatie:
              $ref: '#/components/schemas/AdresseerbaarObjectIdentificatie'
            nummeraanduidingIdentificatie:
              $ref: '#/components/schemas/NummeraanduidingIdentificatie'
            datumAanvangAdresBuitenland:
              $ref: '#/components/schemas/GbaDatum'
            datumAanvangAdreshouding:
              $ref: '#/components/schemas/GbaDatum'
            datumIngangGeldigheid:
              $ref: '#/components/schemas/GbaDatum'
              deprecated: true
            functieAdres:
              $ref: '#/components/schemas/Waardetabel'
            naamOpenbareRuimte:
              $ref: '#/components/schemas/OfficieleStraatnaam'
    ImmigratieBasis:
      type: object
      properties:
        landVanwaarIngeschreven:
          description: |
            het land waar de persoon woonde voor (her)vestiging in Nederland.
          $ref: '#/components/schemas/Waardetabel'
    GbaImmigratie:
      allOf:
        - $ref: '#/components/schemas/ImmigratieBasis'
        - type: object
          properties:
            datumVestigingInNederland:
              $ref: '#/components/schemas/GbaDatum'
    IndicatieCurateleRegister:
      type: boolean
      description: |
        Geeft aan dat de persoon onder curatele is gesteld.
      example: true
    AbstractGezagsrelatie:
      type: object
      required:
        - type
        - minderjarige
      properties:
        type:
          type: string
        minderjarige:
          $ref: '#/components/schemas/Minderjarige'
        inOnderzoek:
          type: boolean
          description: Geeft aan dat de gezagsrelatie in onderzoek is.
      discriminator:
        propertyName: type
        mapping:
          TweehoofdigOuderlijkGezag: '#/components/schemas/TweehoofdigOuderlijkGezag'
          EenhoofdigOuderlijkGezag: '#/components/schemas/EenhoofdigOuderlijkGezag'
          GezamenlijkGezag: '#/components/schemas/GezamenlijkGezag'
          Voogdij: '#/components/schemas/Voogdij'
          TijdelijkGeenGezag: '#/components/schemas/TijdelijkGeenGezag'
          GezagNietTeBepalen: '#/components/schemas/GezagNietTeBepalen'
      example:
        type: TweehoofdigOuderlijkGezag
        ouders:
          - burgerservicenummer: '999998870'
          - burgerservicenummer: '999998882'
        minderjarige:
          burgerservicenummer: '999998894'
    GezagOuder:
      type: object
      properties:
        burgerservicenummer:
          $ref: '#/components/schemas/Burgerservicenummer'
        naam:
          $ref: '#/components/schemas/NaamBasis'
        geslacht:
          $ref: '#/components/schemas/Geslachtsaanduiding'
      required:
        - burgerservicenummer
    TweehoofdigOuderlijkGezag:
      allOf:
        - $ref: '#/components/schemas/AbstractGezagsrelatie'
        - type: object
          properties:
            ouders:
              type: array
              items:
                $ref: '#/components/schemas/GezagOuder'
              minItems: 2
              maxItems: 2
    EenhoofdigOuderlijkGezag:
      allOf:
        - $ref: '#/components/schemas/AbstractGezagsrelatie'
        - type: object
          properties:
            ouder:
              $ref: '#/components/schemas/GezagOuder'
    Derde:
      type: object
      required:
        - type
      properties:
        type:
          type: string
      discriminator:
        propertyName: type
        mapping:
          BekendeDerde: '#/components/schemas/BekendeDerde'
          OnbekendeDerde: '#/components/schemas/OnbekendeDerde'
    BekendeDerde:
      allOf:
        - $ref: '#/components/schemas/Derde'
        - type: object
          properties:
            burgerservicenummer:
              $ref: '#/components/schemas/Burgerservicenummer'
            naam:
              $ref: '#/components/schemas/NaamBasis'
            geslacht:
              $ref: '#/components/schemas/Geslachtsaanduiding'
    OnbekendeDerde:
      allOf:
        - $ref: '#/components/schemas/Derde'
    GezamenlijkGezag:
      allOf:
        - $ref: '#/components/schemas/AbstractGezagsrelatie'
        - type: object
          properties:
            ouder:
              $ref: '#/components/schemas/GezagOuder'
            derde:
              $ref: '#/components/schemas/Derde'
    Voogdij:
      allOf:
        - $ref: '#/components/schemas/AbstractGezagsrelatie'
        - type: object
          properties:
            derden:
              type: array
              items:
                $ref: '#/components/schemas/BekendeDerde'
              minItems: 0
              maxItems: 2
    Toelichting:
      type: string
      pattern: ^[a-zA-Z0-9À-ž \/\;\:\.\-\?\(\)]{1,400}$
    TijdelijkGeenGezag:
      allOf:
        - $ref: '#/components/schemas/AbstractGezagsrelatie'
        - type: object
          properties:
            toelichting:
              $ref: '#/components/schemas/Toelichting'
    GezagNietTeBepalen:
      allOf:
        - $ref: '#/components/schemas/AbstractGezagsrelatie'
        - type: object
          properties:
            toelichting:
              $ref: '#/components/schemas/Toelichting'
    Minderjarige:
      type: object
      properties:
        burgerservicenummer:
          $ref: '#/components/schemas/Burgerservicenummer'
        naam:
          $ref: '#/components/schemas/NaamBasis'
        geslacht:
          $ref: '#/components/schemas/Geslachtsaanduiding'
        geboorte:
          $ref: '#/components/schemas/GeboorteBasis'
      required:
        - burgerservicenummer
    Gezag:
      type: array
      items:
        $ref: '#/components/schemas/AbstractGezagsrelatie'
      minItems: 0
    VerblijfstitelBasis:
      description: |
        Gegevens over de verblijfsrechtelijke status van de persoon.
      type: object
      properties:
        aanduiding:
          description: |
            Verblijfstiteltabel die aangeeft over welke verblijfsrechtelijke status de persoon beschikt. Wordt gevuld met waarden uit de landelijke tabel 'Verblijfstitel'.
          $ref: '#/components/schemas/Waardetabel'
    GbaVerblijfstitel:
      allOf:
        - $ref: '#/components/schemas/VerblijfstitelBasis'
        - type: object
          properties:
            datumEinde:
              description: |
                Datum waarop de geldigheid van de gegevens over de verblijfstitel is beëindigd.
              $ref: '#/components/schemas/GbaDatum'
            datumIngang:
              description: |
                Datum waarop de gegevens over de verblijfstitel geldig zijn geworden.
              $ref: '#/components/schemas/GbaDatum'
            inOnderzoek:
              $ref: '#/components/schemas/InOnderzoek'
    KindBasis:
      type: object
      properties:
        burgerservicenummer:
          $ref: '#/components/schemas/Burgerservicenummer'
    GbaKind:
      allOf:
        - $ref: '#/components/schemas/KindBasis'
        - type: object
          properties:
            inOnderzoek:
              $ref: '#/components/schemas/InOnderzoek'
            naam:
              $ref: '#/components/schemas/NaamBasis'
            geboorte:
              $ref: '#/components/schemas/GbaGeboorte'
    OuderAanduiding:
      type: string
      pattern: ^[1|2]$
      example: '1'
    OuderBasis:
      type: object
      properties:
        burgerservicenummer:
          $ref: '#/components/schemas/Burgerservicenummer'
        geslacht:
          description: |
            wordt gevuld met waarden voor 'Geslacht' in 'tabelwaarden.csv'.
          $ref: '#/components/schemas/Waardetabel'
        ouderAanduiding:
          $ref: '#/components/schemas/OuderAanduiding'
    GbaOuder:
      allOf:
        - $ref: '#/components/schemas/OuderBasis'
        - type: object
          properties:
            datumIngangFamilierechtelijkeBetrekking:
              description: |
                De datum waarop de familierechtelijke betrekking is ontstaan.
              $ref: '#/components/schemas/GbaDatum'
            naam:
              $ref: '#/components/schemas/NaamBasis'
            geboorte:
              $ref: '#/components/schemas/GbaGeboorte'
            inOnderzoek:
              $ref: '#/components/schemas/InOnderzoek'
    PartnerBasis:
      type: object
      properties:
        burgerservicenummer:
          $ref: '#/components/schemas/Burgerservicenummer'
        geslacht:
          description: |
            wordt gevuld met waarden voor 'Geslacht' in 'tabelwaarden.csv'.
          $ref: '#/components/schemas/Waardetabel'
        soortVerbintenis:
          $ref: '#/components/schemas/Waardetabel'
    AangaanHuwelijkPartnerschapBasis:
      type: object
      properties:
        land:
          description: |
            Het land waar het huwelijk is voltrokken of het partnerschap is aangegaan. Wordt gevuld met waarden uit de landelijke tabel 'Landen'.
          $ref: '#/components/schemas/Waardetabel'
        plaats:
          description: |
            De gemeente waar het huwelijk is voltrokken of het partnerschap is aangegaan. Wordt gevuld met waarden uit de landelijke tabel "Gemeenten" voor een gemeente in Nederland of de omschrijving van een buitenlandse plaats.
          $ref: '#/components/schemas/Waardetabel'
    GbaAangaanHuwelijkPartnerschap:
      allOf:
        - $ref: '#/components/schemas/AangaanHuwelijkPartnerschapBasis'
        - type: object
          properties:
            datum:
              description: |
                De datum waarop het huwelijk is voltrokken of het partnerschap is aangegaan.
              $ref: '#/components/schemas/GbaDatum'
    GbaOntbindingHuwelijkPartnerschap:
      type: object
      properties:
        datum:
          $ref: '#/components/schemas/GbaDatum'
    GbaPartner:
      allOf:
        - $ref: '#/components/schemas/PartnerBasis'
        - type: object
          properties:
            naam:
              $ref: '#/components/schemas/NaamBasis'
            geboorte:
              $ref: '#/components/schemas/GbaGeboorte'
            aangaanHuwelijkPartnerschap:
              $ref: '#/components/schemas/GbaAangaanHuwelijkPartnerschap'
            ontbindingHuwelijkPartnerschap:
              $ref: '#/components/schemas/GbaOntbindingHuwelijkPartnerschap'
            inOnderzoek:
              $ref: '#/components/schemas/InOnderzoek'
    GbaPersoon:
      type: object
      properties:
        aNummer:
          $ref: '#/components/schemas/ANummer'
        burgerservicenummer:
          $ref: '#/components/schemas/Burgerservicenummer'
        datumEersteInschrijvingGBA:
          $ref: '#/components/schemas/GbaDatum'
        geheimhoudingPersoonsgegevens:
          $ref: '#/components/schemas/IndicatieGeheim'
        geslacht:
          $ref: '#/components/schemas/Geslachtsaanduiding'
        persoonInOnderzoek:
          $ref: '#/components/schemas/InOnderzoek'
        gezagInOnderzoek:
          $ref: '#/components/schemas/InOnderzoek'
        uitsluitingKiesrecht:
          $ref: '#/components/schemas/GbaUitsluitingKiesrecht'
        europeesKiesrecht:
          $ref: '#/components/schemas/GbaEuropeesKiesrecht'
        naam:
          $ref: '#/components/schemas/GbaNaamPersoon'
        nationaliteiten:
          type: array
          items:
            $ref: '#/components/schemas/GbaNationaliteit'
        geboorte:
          $ref: '#/components/schemas/GbaGeboorte'
        opschortingBijhouding:
          $ref: '#/components/schemas/GbaOpschortingBijhouding'
        overlijden:
          $ref: '#/components/schemas/GbaOverlijden'
        verblijfplaats:
          $ref: '#/components/schemas/GbaVerblijfplaats'
        immigratie:
          $ref: '#/components/schemas/GbaImmigratie'
        gemeenteVanInschrijving:
          $ref: '#/components/schemas/Waardetabel'
        datumInschrijvingInGemeente:
          $ref: '#/components/schemas/GbaDatum'
        indicatieCurateleRegister:
          $ref: '#/components/schemas/IndicatieCurateleRegister'
        indicatieGezagMinderjarige:
          $ref: '#/components/schemas/Waardetabel'
          deprecated: true
        gezag:
          $ref: '#/components/schemas/Gezag'
        verblijfstitel:
          $ref: '#/components/schemas/GbaVerblijfstitel'
        kinderen:
          type: array
          items:
            $ref: '#/components/schemas/GbaKind'
        ouders:
          type: array
          items:
            $ref: '#/components/schemas/GbaOuder'
        partners:
          type: array
          items:
            $ref: '#/components/schemas/GbaPartner'
        rni:
          type: array
          items:
            $ref: '#/components/schemas/RniDeelnemer'
        verificatie:
          $ref: '#/components/schemas/GbaVerificatie'
    RaadpleegMetBurgerservicenummerResponse:
      allOf:
        - $ref: '#/components/schemas/PersonenQueryResponse'
        - type: object
          properties:
            personen:
              type: array
              items:
                $ref: '#/components/schemas/GbaPersoon'
    ZoekMetPostcodeEnHuisnummerResponse:
      allOf:
        - $ref: '#/components/schemas/PersonenQueryResponse'
        - type: object
          properties:
            personen:
              type: array
              items:
                $ref: '#/components/schemas/GbaPersoonBeperkt'
    ZoekMetStraatHuisnummerEnGemeenteVanInschrijvingResponse:
      allOf:
        - $ref: '#/components/schemas/PersonenQueryResponse'
        - type: object
          properties:
            personen:
              type: array
              items:
                $ref: '#/components/schemas/GbaPersoonBeperkt'
    ZoekMetNummeraanduidingIdentificatieResponse:
      allOf:
        - $ref: '#/components/schemas/PersonenQueryResponse'
        - type: object
          properties:
            personen:
              type: array
              items:
                $ref: '#/components/schemas/GbaPersoonBeperkt'
    GbaGezagPersoonBeperkt:
      allOf:
        - $ref: '#/components/schemas/GbaPersoonBeperkt'
        - type: object
          properties:
            gezag:
              $ref: '#/components/schemas/Gezag'
    ZoekMetAdresseerbaarObjectIdentificatieResponse:
      allOf:
        - $ref: '#/components/schemas/PersonenQueryResponse'
        - type: object
          properties:
            personen:
              type: array
              items:
                $ref: '#/components/schemas/GbaGezagPersoonBeperkt'
    InvalidParam:
      type: object
      description: Details over fouten in opgegeven parameters
      properties:
        type:
          type: string
          format: uri
          example: https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.5.1
        name:
          description: Naam van de parameter
          type: string
          pattern: ^[a-zA-Z0-9\._]{1,30}$
          example: huisnummer
        code:
          description: Systeemcode die het type fout aangeeft
          type: string
          pattern: ^[a-zA-Z0-9]{1,25}$
          example: integer
        reason:
          description: Beschrijving van de fout op de parameterwaarde
          type: string
          pattern: ^[a-zA-Z0-9\., ]{1,80}$
          example: Waarde is geen geldig getal.
    BadRequestFoutbericht:
      allOf:
        - $ref: '#/components/schemas/Foutbericht'
        - type: object
          properties:
            invalidParams:
              description: |
                Foutmelding per fout in een parameter. Alle gevonden fouten worden één keer teruggemeld.
              type: array
              items:
                $ref: '#/components/schemas/InvalidParam'
  responses:
    '400':
      description: Bad Request
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/BadRequestFoutbericht'
          example:
            type: https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.4.1
            title: Ten minste één parameter moet worden opgegeven.
            status: 400
            detail: The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modification.
            instance: https://datapunt.voorbeeldgemeente.nl/api/v1/resourcenaam?parameter=waarde
            code: paramsRequired
            invalidParams:
              - type: https://www.vng.nl/realisatie/api/validaties/integer
                name: huisnummer
                code: integer
                reason: Waarde is geen geldig getal.
    '401':
      description: Unauthorized
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Foutbericht'
          example:
            type: https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.4.2
            title: Niet correct geauthenticeerd.
            status: 401
            detail: The request requires user authentication. The response MUST include a WWW-Authenticate header field (section 14.47) containing a challenge applicable to the requested resource.
            instance: https://datapunt.voorbeeldgemeente.nl/api/v1/resourcenaam?parameter=waarde
            code: authentication
    '403':
      description: Forbidden
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Foutbericht'
          example:
            type: https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.4.4
            title: U bent niet geautoriseerd voor deze operatie.
            status: 403
            detail: The server understood the request, but is refusing to fulfill it.
            instance: https://datapunt.voorbeeldgemeente.nl/api/v1/resourcenaam?parameter=waarde
            code: autorisation
    '406':
      description: Not Acceptable
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Foutbericht'
          example:
            type: https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.4.7
            title: Gevraagde contenttype wordt niet ondersteund.
            status: 406
            detail: The resource identified by the request is only capable of generating response entities which have content characteristics not acceptable according to thr accept headers sent in the request
            instance: https://datapunt.voorbeeldgemeente.nl/api/v1/resourcenaam?parameter=waarde
            code: notAcceptable
    '415':
      description: Unsupported Media Type
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Foutbericht'
          example:
            type: https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.4.16
            title: Unsupported Media Type
            status: 415
            detail: The server is refusing the request because the entity of the request is in a format not supported by the requested resource for the requested method.
            instance: https://datapunt.voorbeeldgemeente.nl/api/v1/resourcenaam?parameter=waarde
            code: unsupported
    '429':
      description: Too Many Requests
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Foutbericht'
          example:
            type: https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html
            title: Too many request
            status: 429
            detail: The user has sent too many requests in a given amount of time (rate limiting).
            instance: https://datapunt.voorbeeldgemeente.nl/api/v1/resourcenaam?parameter=waarde
            code: tooManyRequests
    '500':
      description: Internal Server Error
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Foutbericht'
          example:
            type: https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.5.1
            title: Interne server fout.
            status: 500
            detail: The server encountered an unexpected condition which prevented it from fulfilling the request.
            instance: https://datapunt.voorbeeldgemeente.nl/api/v1/resourcenaam?parameter=waarde
            code: serverError
    '503':
      description: Service Unavailable
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Foutbericht'
          example:
            type: https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.5.4
            title: Bronservice BRP is tijdelijk niet beschikbaar.
            status: 503
            detail: The service is currently unable to handle the request due to a temporary overloading or maintenance of the server.
            instance: https://datapunt.voorbeeldgemeente.nl/api/v1/resourcenaam?parameter=waarde
            code: notAvailable
